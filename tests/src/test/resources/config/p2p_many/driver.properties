#------------------------------------------------------------------------------#
# JPPF.                                                                        #
# Copyright (C) 2005-2019 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
#    http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#

#------------------------------------------------------------------------------#
# port number to which the server listens for plain connections                #
# default value is 11111; uncomment to specify a different value               #
# to disable, specify a negative port number                                   #
#------------------------------------------------------------------------------#

jppf.server.port = expr: 11100 + $n
#jppf.ssl.server.port = expr: 12100 + $n
jppf.ssl.server.port = -1
jppf.node.max.jobs = 1

#------------------------------------------------------------------------------#
#                          SSL Settings                                        #
#------------------------------------------------------------------------------#

# location of the SSL configuration on the file system
jppf.ssl.configuration.file = ssl/ssl-server.properties

# enable secure communications with other servers; defaults to false (disabled)
#jppf.peer.ssl.enabled = true

#------------------------------------------------------------------------------#
# enabling JMX features                                                        #
#------------------------------------------------------------------------------#

# non-secure JMX connections; default is true (enabled)
#jppf.management.enabled = true

# secure JMX connections via SSL/TLS; default is false (disabled)
#jppf.management.ssl.enabled = true

#------------------------------------------------------------------------------#
# JMX management                                                               #
#------------------------------------------------------------------------------#

#jppf.management.host = localhost
jppf.management.port = expr: 11200 + $n
#jppf.management.ssl.port = expr: 12200 + $n

#------------------------------------------------------------------------------#
# JVM Options                                                                  #
#------------------------------------------------------------------------------#

jppf.jvm.options = expr: "-Xmx128m -server -XX:+HeapDumpOnOutOfMemoryError -Djava.util.logging.config.file=target/test-classes/config/logging-driver-" + $n + ".properties"

# with debug options
#jppf.jvm.options = expr: "-Xmx128m -server -Djava.util.logging.config.file=target/test-classes/config/logging-driver-" + $n + \
#  ".properties -Xrunjdwp:transport=dt_socket,address=localhost:800" + $n + ",server=y,suspend=n"

#------------------------------------------------------------------------------#
# server discovery                                                             #
#------------------------------------------------------------------------------#

jppf.discovery.enabled = false
jppf.discovery.broadcast.interval = 500
jppf.peer.discovery.enabled = false
jppf.peer.allow.orphans = true

#jppf.peers = driver1
jppf.peers = expr: \
  String computePeers() { \
    def s = ""; \
    for (i=1; i<=$nbDrivers; i++) { \
      if (i != $n) { \
        if (i > 1) s = s + " "; \
        s = s + "driver" + i; \
      }; \
    }; \
    return s \
  }; \
  computePeers()
#jppf.peer.driver1.server.host = localhost
jppf.peer.driver$i.server.host = $for{1; $nbDrivers; $i != $n} localhost
#jppf.peer.driver1.server.port = expr: 11100 + (($n % $nbDrivers == 1) ? 2 : 1)
jppf.peer.driver$i.server.port = $for{1; $nbDrivers; $i != $n} expr: 11100 + $i

#------------------------------------------------------------------------------#
# the name of the load-balancing algorithm to use                              #
#------------------------------------------------------------------------------#

jppf.load.balancing.algorithm = proportional
#jppf.load.balancing.algorithm = manual
#jppf.load.balancing.algorithm = nodethreads
#jppf.load.balancing.algorithm = customLoadBalancer

jppf.load.balancing.profile = proportional

# "manual" profile
jppf.load.balancing.profile.manual.size = 5

# "autotuned" profile
jppf.load.balancing.profile.autotuned.size = 5
jppf.load.balancing.profile.autotuned.minSamplesToAnalyse = 100
jppf.load.balancing.profile.autotuned.minSamplesToCheckConvergence = 50
jppf.load.balancing.profile.autotuned.maxDeviation = 0.2
jppf.load.balancing.profile.autotuned.maxGuessToStable = 50
jppf.load.balancing.profile.autotuned.sizeRatioDeviation = 1.5
jppf.load.balancing.profile.autotuned.decreaseRatio = 0.2

# "proportional" profile
jppf.load.balancing.profile.proportional.performanceCacheSize = 2000
jppf.load.balancing.profile.proportional.proportionalityFactor = 1
jppf.load.balancing.profile.proportional.initialSize = 5
jppf.load.balancing.profile.proportional.initialMeanTime = 3e10

# "rl" profile
jppf.load.balancing.profile.rl.performanceCacheSize = 1000
jppf.load.balancing.profile.rl.performanceVariationThreshold = 0.001
jppf.load.balancing.profile.rl.maxActionRange = 10

#jppf.peers = driver2
#jppf.peer.driver2.server.host = localhost
#jppf.peer.driver2.server.port = 11121

#------------------------------------------------------------------------------#
# behavioral options                                                           #
#------------------------------------------------------------------------------#

#jppf.object.input.stream.class = org.jppf.serialization.JPPFObjectInputStream
#jppf.object.output.stream.class = org.jppf.serialization.JPPFObjectOutputStream

#jppf.io.buffer.size = 128

#jppf.management.connector = rmi

jppf.debug.enabled = true

#jppf.nio.check.connection = false

jppf.nio.select.timeout = 0
#jppf.transition.thread.pool.size = 1

# readable driver uuid
jppf.driver.uuid = expr: "d" + $n

#jppf.peer.allow.orphans = true
