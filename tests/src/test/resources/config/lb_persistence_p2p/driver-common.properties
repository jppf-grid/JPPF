#------------------------------------------------------------------------------#
# JPPF.                                                                        #
# Copyright (C) 2005-2019 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
#    http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#

jppf.node.max.jobs = 1

jppf.server.port = expr: 11100 + $n
#jppf.ssl.server.port = expr: 12100 + $n
jppf.ssl.server.port = -1
jppf.management.port = expr: 11200 + $n
jppf.management.ssl.port = expr: 12200 + $n

#------------------------------------------------------------------------------#
# JVM options                                                                  #
#------------------------------------------------------------------------------#

jppf.jvm.options = expr: "-Xmx128m -server -Djava.util.logging.config.file=target/test-classes/config/logging-driver-" + $n + ".properties"

#------------------------------------------------------------------------------#
# Automatic discovery                                                          #
#------------------------------------------------------------------------------#

jppf.discovery.enabled = false
#jppf.discovery.group = 230.0.0.1
#jppf.discovery.port = 11111
jppf.discovery.broadcast.interval = 500
jppf.peer.discovery.enabled = false

jppf.peers = driver1
jppf.peer.driver1.server.host = localhost
jppf.peer.driver1.server.port = expr: 11101 + ($n % $nbDrivers)

#------------------------------------------------------------------------------#
# Load-balancing persistence                                                   #
#------------------------------------------------------------------------------#

pkg = org.jppf.load.balancer.persistence
db = ${pkg}.DatabaseLoadBalancerPersistence load_balancer loadBalancerDS
file = ${pkg}.FileLoadBalancerPersistence target/lb_persistence_driver1
async = ${pkg}.AsynchronousLoadBalancerPersistence 8

#------------------------------------------------------------------------------#
# Load-balancing configuration                                                 #
#------------------------------------------------------------------------------#

jppf.load.balancing.algorithm = proportional
#jppf.load.balancing.algorithm = rl2
#jppf.load.balancing.algorithm = manual
#jppf.load.balancing.algorithm = nodethreads
#jppf.load.balancing.algorithm = autotuned

jppf.load.balancing.profile = test

# "test" profile
# manual params
jppf.load.balancing.profile.test.size = 10
# autotuned params
jppf.load.balancing.profile.test.minSamplesToAnalyse = 100
jppf.load.balancing.profile.test.minSamplesToCheckConvergence = 50
jppf.load.balancing.profile.test.maxDeviation = 0.2
jppf.load.balancing.profile.test.maxGuessToStable = 50
jppf.load.balancing.profile.test.sizeRatioDeviation = 1.5
jppf.load.balancing.profile.test.decreaseRatio = 0.2
# proportional params
jppf.load.balancing.profile.test.proportionalityFactor = 1
jppf.load.balancing.profile.test.initialSize = 10
jppf.load.balancing.profile.test.initialMeanTime = 3e10
jppf.load.balancing.profile.test.multiplicator = 1
# rl2 params
jppf.load.balancing.profile.test.performanceCacheSize = 1000
jppf.load.balancing.profile.test.performanceVariationThreshold = 0.75
jppf.load.balancing.profile.test.minSamples = 20
jppf.load.balancing.profile.test.maxSamples = 500
jppf.load.balancing.profile.test.maxRelativeSize = 0.5

#------------------------------------------------------------------------------#
# recovery configuration                                                       #
#------------------------------------------------------------------------------#

jppf.recovery.enabled = false
jppf.recovery.max.retries = 3
jppf.recovery.read.timeout = 3000
jppf.recovery.server.port = 22222
#jppf.recovery.reaper.pool.size = 8
jppf.recovery.reaper.run.interval = 10000

#------------------------------------------------------------------------------#
# Datasource definitions                                                       #
#------------------------------------------------------------------------------#

ns = test.org.jppf.persistence.AbstractDatabaseSetup

# datasource for load-balancers persistence
#jppf.datasource.common.name = loadBalancerDS
jppf.datasource.common.scope = local
jppf.datasource.common.driverClassName = expr: ${ns}.DB_DRIVER_CLASS
jppf.datasource.common.jdbcUrl = expr: ${ns}.DB_URL
jppf.datasource.common.username = expr: ${ns}.DB_USER
jppf.datasource.common.password = expr: ${ns}.DB_PWD
jppf.datasource.common.minimumIdle = 5
jppf.datasource.common.maximumPoolSize = 10
jppf.datasource.common.connectionTimeout = 30000
jppf.datasource.common.idleTimeout = 600000

#------------------------------------------------------------------------------#
# behavioral options                                                           #
#------------------------------------------------------------------------------#

#jppf.io.buffer.size = 128

jppf.debug.enabled = true

#jppf.nio.check.connection = false

jppf.nio.select.timeout = 0
#jppf.transition.thread.pool.size = 1

# readable driver uuid
jppf.driver.uuid = expr: "d" + $n

#------------------------------------------------------------------------------#
# local node configuration                                                     #
#------------------------------------------------------------------------------#

# readable local node uuid
jppf.node.uuid = expr: "ln" + $n

#jppf.local.node.enabled = true
#jppf.processing.threads = 4
jppf.classloader.cache.size = 1

#jppf.classloader.delegation = url
#jppf.thread.manager.class = org.jppf.server.node.fj.ThreadManagerForkJoin
