#------------------------------------------------------------------------------#
# JPPF                                                                         #
# Copyright (C) 2005-2019 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
# 	 http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#

### direct log messages to stdout ###
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.Target=System.out
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.JPPF.layout.ConversionPattern=%d [%-5p][%c.%M(%L)]: %m\n

### direct messages to jppf-driver.log ###
log4j.appender.JPPF=org.apache.log4j.FileAppender
log4j.appender.JPPF.File=expr: "target/driver-" + $n + ".log"
log4j.appender.JPPF.Append=true
log4j.appender.JPPF.BufferedIO=false
log4j.appender.JPPF.layout=org.apache.log4j.PatternLayout
log4j.appender.JPPF.layout.ConversionPattern=%d [%-5p][%-20.20t][%c.%M(%L)] %m%n

### set log levels - for more verbose logging change 'info' to 'debug' ###

log4j.rootLogger=INFO, JPPF
#log4j.rootLogger=DEBUG, JPPF

#log4j.logger.org.jppf.example.loadbalancer.server=DEBUG
log4j.logger.org.jppf.classloader=INFO
log4j.logger.org.jppf.comm.discovery=INFO
#log4j.logger.org.jppf.io=DEBUG
#log4j.logger.org.jppf.io.FileDataLocation=TRACE
#log4j.logger.org.jppf.io.IOHelper=TRACE
#log4j.logger.org.jppf.server.job=DEBUG
#log4j.logger.org.jppf.jmxremote=DEBUG
#log4j.logger.org.jppf.jmxremote.JPPFMBeanServerConnection=DEBUG
#log4j.logger.org.jppf.jmxremote.notification=DEBUG
log4j.logger.org.jppf.server.job.JPPFJobManager=DEBUG
#log4j.logger.org.jppf.management=DEBUG
log4j.logger.org.jppf.management.JMXConnectionWrapper=INFO
log4j.logger.org.jppf.management.JMXConnectionThread=INFO
log4j.logger.org.jppf.management.JPPFDriverAdmin=DEBUG
log4j.logger.org.jppf.management.JPPFNodeConnectionNotifier=DEBUG
log4j.logger.org.jppf.management.NodeSelectionHelper=TRACE
#log4j.logger.org.jppf.management.forwarding=DEBUG
log4j.logger.org.jppf.management.forwarding.JPPFNodeForwarding=DEBUG
log4j.logger.org.jppf.management.forwarding.NodeForwarding=DEBUG
#log4j.logger.org.jppf.management.forwarding.InvokeMethodTask=DEBUG
log4j.logger.org.jppf.management.forwarding.ForwardingNotificationDispatcher=DEBUG
log4j.logger.org.jppf.management.forwarding.ForwardingNotificationManager=DEBUG
#log4j.logger.org.jppf.node.policy.PolicyRuleTest=DEBUG
#log4j.logger.org.jppf.scheduling=DEBUG
log4j.logger.org.jppf.serialization.JPPFSerialization$Factory=DEBUG
#log4j.logger.org.jppf.server=DEBUG
log4j.logger.org.jppf.server.JPPFDriver=DEBUG
log4j.logger.org.jppf.server.DriverInitializer=DEBUG
#log4j.logger.org.jppf.server.NodeInformationHandler=DEBUG
#log4j.logger.org.jppf.server.event=DEBUG
log4j.logger.org.jppf.server.event.NodeConnectionEventHandler=DEBUG
#log4j.logger.org.jppf.server.job=DEBUG
#log4j.logger.org.jppf.server.job.JPPFJobManager=DEBUG
#log4j.logger.org.jppf.server.job.management=DEBUG
log4j.logger.org.jppf.server.job.management.DriverJobManagement=DEBUG
#log4j.logger.org.jppf.server.management=DEBUG
log4j.logger.org.jppf.nio=INFO
log4j.logger.org.jppf.nio.NioObject=INFO
log4j.logger.org.jppf.nio.NioServer=DEBUG
log4j.logger.org.jppf.nio.StatelessNioServer=DEBUG
#log4j.logger.org.jppf.nio.AbstractNioContext=DEBUG
#log4j.logger.org.jppf.nio.SSLHandler=TRACE
log4j.logger.org.jppf.nio.StateTransitionTask=DEBUG
#log4j.logger.org.jppf.nio.StateTransitionManager=DEBUG
log4j.logger.org.jppf.nio.acceptor=DEBUG
#log4j.logger.org.jppf.server.nio.classloader=DEBUG
#log4j.logger.org.jppf.server.nio.classloader.client=DEBUG
#log4j.logger.org.jppf.server.nio.classloader.client.ClientClassNioServer=DEBUG
log4j.logger.org.jppf.server.nio.client=DEBUG
#log4j.logger.org.jppf.server.nio.client.ClientNioServer=DEBUG
log4j.logger.org.jppf.server.nio.nodeserver=DEBUG
log4j.logger.org.jppf.server.nio.nodeserver.NodeDispatchTimeoutAction=DEBUG
log4j.logger.org.jppf.server.peer=DEBUG
log4j.logger.org.jppf.server.protocol=DEBUG
#log4j.logger.org.jppf.server.protocol.ServerJob=DEBUG
log4j.logger.org.jppf.server.queue=DEBUG
#log4j.logger.org.jppf.server.queue.JPPFPriorityQueue=DEBUG
log4j.logger.org.jppf.server.queue.JobExpirationAction=DEBUG
log4j.logger.org.jppf.server.queue.ScheduleManager=DEBUG
log4j.logger.org.jppf.server.scheduler.bundle=INFO
#log4j.logger.org.jppf.ssl=DEBUG
log4j.logger.org.jppf.utils=INFO
#log4j.logger.org.jppf.utils.BufferPool=INFO
log4j.logger.org.jppf.utils.DebugInterruptThreadFactory=DEBUG
log4j.logger.org.jppf.utils.JPPFDefaultUncaughtExceptionHandler=DEBUG
#log4j.logger.org.jppf.utils.NetworkUtils=INFO
log4j.logger.org.jppf.utils.concurrent.ConcurrentUtils=DEBUG
log4j.logger.org.jppf.serialization=DEBUG
