#------------------------------------------------------------------------------#
# JPPF.                                                                        #
# Copyright (C) 2005-2019 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
#    http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#


#------------------------------------------------------------------------------#
# Space-separated list of named drivers this client may connect to.            #
# If auto discovery of the server is enabled, this needs not be specified.     #
#------------------------------------------------------------------------------#

jppf.drivers = driver1
# jppf.drivers = driver1 driver2

#------------------------------------------------------------------------------#
# Manual configuration of the connection to a JPPF driver                      #
# These settings only apply if jppf.discovery.enabled = false                  #
#------------------------------------------------------------------------------#

# Host name, or ip address, of the host the JPPF driver is running on
# If auto discovery of the server is enabled, this needs not be specified.
driver1.jppf.server.host = localhost

# port number the server is listening to for connections.
# Defaults to 11111 if SSL is disabled, 11443 if SSL is enabled
driver1.jppf.server.port = 11111

# Whether SSL connectivity is requested for this driver. Defaults to false
driver1.jppf.ssl.enabled = false

# Priority given to the driver connection.
# When this is used, the client is always connected to the available driver connection(s)
# with the highest priority. If multiple drivers have the same priority, they will be
# used as a pool and jobs will be evenly distributed among them. The default value is 0
driver1.jppf.priority = 10

# Size of the connection pool associated with a driver definition. The JPPF client
# will create the specified number of connections to the driver, allowing to send
# multiple jobs concurrently to the same driver, or each job over  multiple connections
# in parallel, or any combination of the two, depending on the load balancing settings.
# The default value is 1
#driver1.jppf.pool.size = 10

# Size of the associated pool of JMX connections. Defaults to 1.
# Each JMX connection uses resources (threads and socket connection) on both the
# server and client. It is thus recommended to have this value as low as possible.
#driver1.jppf.jmx.pool.size = 10

# Maximum number of jobs each connection can handle concurrently.
# The default value is Integer.MAX_VALUE.
#driver1.jppf.max.jobs = 100

#------------------------------------------------------------------------------#
# Manual configuration of the connection to a second JPPF driver               #
# These settings only apply if jppf.discovery.enabled = false                  #
#------------------------------------------------------------------------------#

#driver2.jppf.server.host = localhost
#driver2.jppf.server.port = 11443
#driver2.jppf.ssl.enabled = true
#driver2.jppf.priority = 5
#driver2.jppf.pool.size = 2
#driver2.jppf.jmx.pool.size = 2

#------------------------------------------------------------------------------#
# Management configuration                                                     #
#------------------------------------------------------------------------------#

# Enable or disable management features in the client. Defaults to true (enabled)
#jppf.management.enabled = false

#------------------------------------------------------------------------------#
# SSL Settings                                                                 #
#------------------------------------------------------------------------------#

# enable SSL for auto-discovered drivers. Default is false (disabled).
# if enabled, only SSL connections are established
#jppf.ssl.enabled = true

# location of the SSL configuration on the file system or in the classpath
jppf.ssl.configuration.file = config/ssl/ssl.properties

# SSL configuration as an arbitrary source. Value is the fully qualified name
# of an implementation of Callable<InputStream> with optional arguments
#jppf.ssl.configuration.source = org.jppf.ssl.FileStoreSource config/ssl/ssl.properties

#------------------------------------------------------------------------------#
# Automatic recovery of driver connections. This parameters determine how the  #
# JPPF client reacts when a connection to a driver is lost                     #
#------------------------------------------------------------------------------#

# number of seconds before the first reconnection attempt. Defaults to 0
#jppf.reconnect.initial.delay = 0

# time in seconds after which the system stops trying to reconnect
# A value of zero or less means the system never stops trying. Defaults to 60
jppf.reconnect.max.time = -1

# time between two connection attempts, in seconds. Defaults to 1
#jppf.reconnect.interval = 1

# whether to resolve the drivers' ip addresses into host names. Defaults to true (resolve the addresses)
jppf.resolve.addresses = true

#------------------------------------------------------------------------------#
# Local executor settings. The local executor, when enabled, processes jobs in #
# the same JVM as the JPPF client, using the exact same APIs as a for remote   #
# connections.                                                                 #
#------------------------------------------------------------------------------#

# Enable local execution of jobs? Default value is false (disabled)
#jppf.local.execution.enabled = true

# Number of threads to use for local execution. Defaults to the number of CPUs available to the JVM
#jppf.local.execution.threads = 4

# priority assigned to the local executor; defaults to 0
# this is equivalent to "<driver_name>.jppf.priority" in manual network configuration
#jppf.local.execution.priority = 10

# Enable remote execution of jobs? Default value is true (enabled)
# when disabled, jobs will not be submitted to any remote server
#jppf.remote.execution.enabled = true

#------------------------------------------------------------------------------#
# Configuration of automatic discovery of JPPF drivers via UDP multicast.      #
#------------------------------------------------------------------------------#

# Enable or disable discovery of JPPF drivers. Defaults to true (enabled)
#jppf.discovery.enabled = true

# UDP multicast group to which drivers broadcast their connection parameters 
# and to which clients and nodes listen. Defaults to 230.0.0.1
#jppf.discovery.group = 230.0.0.1

# UDP multicast port to which drivers broadcast their connection parameters. Defaults to 11111
#jppf.discovery.port = 11111

# Size of the connection pool for each discovered driver. Default value is 1
#jppf.pool.size = 1

# priority assigned to all auto-discovered connections; defaults to 0
# this is equivalent to "<driver_name>.jppf.priority" in manual network configuration
#jppf.discovery.priority = 10

# Maximum number of jobs each connection can handle concurrently.
# The default value is Integer.MAX_VALUE.
#jppf.max.jobs = 100

# IPv4 address patterns included in the server discovery mechanism
# Drivers whose IPv4 address matches the pattern will be included
# in the list of discovered drivers.
#jppf.discovery.include.ipv4 = 192.168.1.; 192.168.1.0/24

# IPv4 address patterns excluded from the server discovery mechanism
# Drivers whose IPv4 address matches the pattern will be excluded
# from the list of discovered drivers.
#jppf.discovery.exclude.ipv4 = 192.168.1.128-; 192.168.1.0/25

# IPv6 address patterns included in the server discovery mechanism
#jppf.discovery.include.ipv6 = 1080:0:0:0:8:800:200C-20FF:-; ::1/80

# IPv6 address patterns excluded from the server discovery mechanism
#jppf.discovery.exclude.ipv6 = 1080:0:0:0:8:800:200C-20FF:0C00-0EFF; ::1/96

#------------------------------------------------------------------------------#
# Specify alternate serialization schemes.                                     #
# Defaults to org.jppf.serialization.DefaultJavaSerialization.                 #
#------------------------------------------------------------------------------#

# The default: standard Java serialization
#jppf.object.serialization.class = org.jppf.serialization.DefaultJavaSerialization

# built-in JPPF serialization, enables serialization of objects whose class does not implement java.io.Serializable
#jppf.object.serialization.class = org.jppf.serialization.DefaultJPPFSerialization

# XStream serialization
#jppf.object.serialization.class = org.jppf.serialization.XstreamSerialization

# Kryo serialization, defined in the "Kryo Serialization" sample
#jppf.object.serialization.class = org.jppf.serialization.kryo.KryoSerialization

#------------------------------------------------------------------------------#
# Load-balancing configuration. The load-balancing determines how the tasks in #
# the jobs are distributed over the available driver connections, including    #
# the connection to the local executor (if  enabled).                          #
# If no load-balancing is configured, the JPPF client will default to the      #
# "manual" algorithm with a fixed size of 1,000,000                            # 
#------------------------------------------------------------------------------#

# Name of the load-balancing algorithm to use. Pre-defined possible values are:
# manual | autotuned | proportional | rl | nodethreads
# It can also be the name of a user-defined algorithm. Defaults to "manual"
jppf.load.balancing.algorithm = manual

# name of the set of parameter values (aka profile) to use with the algorithm
jppf.load.balancing.profile = manual_profile

# "manual" profile
jppf.load.balancing.profile.manual_profile.size = 1000000

# "autotuned" profile
jppf.load.balancing.profile.autotuned_profile.size = 5
jppf.load.balancing.profile.autotuned_profile.minSamplesToAnalyse = 100
jppf.load.balancing.profile.autotuned_profile.minSamplesToCheckConvergence = 50
jppf.load.balancing.profile.autotuned_profile.maxDeviation = 0.2
jppf.load.balancing.profile.autotuned_profile.maxGuessToStable = 50
jppf.load.balancing.profile.autotuned_profile.sizeRatioDeviation = 1.5
jppf.load.balancing.profile.autotuned_profile.decreaseRatio = 0.2

# "proportional" profile
jppf.load.balancing.profile.proportional_profile.size = 5
jppf.load.balancing.profile.proportional_profile.initialMeanTime = 1e10
jppf.load.balancing.profile.proportional_profile.performanceCacheSize = 300
jppf.load.balancing.profile.proportional_profile.proportionalityFactor = 1

# "rl" profile
jppf.load.balancing.profile.rl_profile.performanceCacheSize = 1000
jppf.load.balancing.profile.rl_profile.performanceVariationThreshold = 0.0001
jppf.load.balancing.profile.rl_profile.maxActionRange = 10

# "nodethreads" profile
jppf.load.balancing.profile.nodethreads_profile.multiplicator = 1

# "rl2" profile
jppf.load.balancing.profile.rl2_profile.performanceCacheSize = 1000
jppf.load.balancing.profile.rl2_profile.performanceVariationThreshold = 0.75
jppf.load.balancing.profile.rl2_profile.minSamples = 20
jppf.load.balancing.profile.rl2_profile.maxSamples = 100
jppf.load.balancing.profile.rl2_profile.maxRelativeSize = 0.5

#------------------------------------------------------------------------------#
# JPPF grid topology monitoring: configuration of the refresh intervals.       #
# Change the values of these properties if the monitoring API is has trouble   #
# keeping up with  all the information received from the nodes and servers.    #
# This may happen when the number of nodes and servers becomes large and the   #
# TopologyManager cannot cope. Increasing the refresh intervals (or decreasing #
# the frequency of the updates) resolves such situations.                      #
#------------------------------------------------------------------------------#

# refresh interval im for the topology panels: tree view and graph views; defaults to 1000
# this is the interval between 2 successive runs of the task that refreshes the topology via JMX requests
jppf.admin.refresh.interval.topology = 1000

# refresh interval for the JVM health panel in ms; defaults to 3000
# this is the interval between 2 successive runs of the task that refreshes the JVM health via JMX requests
jppf.admin.refresh.interval.health = 3000

#------------------------------------------------------------------------------#
# Global performance tuning parameters. These affect the performance and       #
# throughput of I/O operations in JPPF. The values provided in the vanilla     #
# JPPF distribution are known to offer a good performance in most situations   #
# and environments.                                                            #
#------------------------------------------------------------------------------#

# Size of send and receive buffer for socket connections.
# Defaults to 32768 and must be in range [1024, 1024*1024]
# 128 * 1024 = 131072
jppf.socket.buffer.size = 131072
# Size of temporary buffers (including direct buffers) used in I/O transfers.
# Defaults to 32768 and must be in range [1024, 1024*1024]
jppf.temp.buffer.size = 12288
# Maximum size of temporary buffers pool (excluding direct buffers). When this size
# is reached, new buffers are still created, but not released into the pool, so they
# can be quickly garbage-collected. The size of each buffer is defined with ${jppf.temp.buffer.size}
# Defaults to 10 and must be in range [1, 2048]
jppf.temp.buffer.pool.size = 200
# Size of temporary buffer pool for reading lengths as ints (size of each buffer is 4).
# Defaults to 100 and must be in range [1, 2048]
jppf.length.buffer.pool.size = 100

#------------------------------------------------------------------------------#
# Enabling or disabling the lookup of classpath resources in the file system   #
# Defaults to true (enabled)                                                   #
#------------------------------------------------------------------------------#

#jppf.classloader.file.lookup = true

#------------------------------------------------------------------------------#
# Timeout in millis for JMX requests. Defaults to Long.MAX_VALUE (2^63 - 1)    #
#------------------------------------------------------------------------------#

#jppf.jmx.request.timeout = $script{ java.lang.Long.MAX_VALUE }$

#------------------------------------------------------------------------------#
# path to the Java executable. When defined, it is used by the launch script   #
# (run.bat or run.sh) instead of the default Java path.                        #
# It is undefined by default, meaning that the script will use the "java"      #
# command, relying on Java being in the system PATH.                           #
#------------------------------------------------------------------------------#

# linux/unix example
#jppf.java.path = /opt/java/jdk1.8.0_x64/bin/java
# windows example
#jppf.java.path = C:/java/jdk1.8.0_x64/bin/java.exe

