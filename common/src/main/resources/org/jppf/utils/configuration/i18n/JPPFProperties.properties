#------------------------------------------------------------------------------#
# JPPF.                                                                        #
# Copyright (C) 2005-2019 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
#    http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#


#------------------------------------------------------------------------------#
# Possible tags:                                                               #
#   common, client, admin, driver, node, console, android, .net,               #
#   jmx_connector, ssl, screensaver, internal                                  #
#                                                                              #
# The tags are specified as a comma-separated list.                            #
# Tags are not intended to be localized, therefore they should only be set     #
# in the base resource bundle. The API will always use the en_US locale to     #
# resolve them.                                                                #
#------------------------------------------------------------------------------#

jppf.admin.refresh.interval.health.doc  = Interval between updates of the JVM health data
jppf.admin.refresh.interval.health.tags = admin
jppf.admin.refresh.interval.stats.doc  = Interval between updates of the server statistics
jppf.admin.refresh.interval.stats.tags = admin
jppf.admin.refresh.interval.topology.doc  = Interval between updates of the topology views
jppf.admin.refresh.interval.topology.tags = admin
jppf.admin.refresh.system.info.doc = Wether to refresh the nodes' system info as well (to use for node filtering on the client side)
jppf.admin.refresh.system.info.tags = admin
jppf.check.low.memory.doc = Whether to check for low memory and trigger disk offloading
jppf.check.low.memory.tags = common, memory
jppf.classloader.cache.size.doc  = Size of the class loader cache for the node
jppf.classloader.cache.size.tags = node
jppf.classloader.delegation.doc  = Class loader delegation mode: 'parent' or 'url'
jppf.classloader.delegation.tags = node
jppf.classloader.file.lookup.doc  = Enable/disable lookup of classpath resources in the file system
jppf.classloader.file.lookup.tags = node, common
jppf.client.sysout.enabled.doc = Whether the client should print connection events to stdout
jppf.client.sysout.enabled.tags = client
jppf.config.overrides.path.doc  = Path to the temporary config overrides properties file
jppf.config.overrides.path.tags = node
jppf.cpu.load.computation.interval.doc  = Determines the frequency at which the JVM's cpu load is recomputed, in ms
jppf.cpu.load.computation.interval.tags = driver, node, management, internal
jppf.debug.enabled.doc  = whether the debug mbean is enabled
jppf.debug.enabled.tags = driver, internal
jppf.discovery.acceptMultipleInterfaces.doc  = Whether to discover server connections from multiple network interfaces
jppf.discovery.acceptMultipleInterfaces.tags = client
jppf.discovery.broadcast.exclude.ipv4.doc  = Prevent broadcast to the specified IPv4 addresses (exclusive filter, server only)
jppf.discovery.broadcast.exclude.ipv4.tags = driver
jppf.discovery.broadcast.exclude.ipv6.doc  = Prevent broadcast to the specified IPv6 addresses (exclusive filter, server only)
jppf.discovery.broadcast.exclude.ipv6.tags = driver
jppf.discovery.broadcast.include.ipv4.doc  = Broadcast to the specified IPv4 addresses (inclusive filter, server only)
jppf.discovery.broadcast.include.ipv4.tags = driver
jppf.discovery.broadcast.include.ipv6.doc  = Broadcast to the specified IPv6 addresses (inclusive filter, server only)
jppf.discovery.broadcast.include.ipv6.tags = driver
jppf.discovery.broadcast.interval.doc  = UDP broadcast interval in milliseconds
jppf.discovery.broadcast.interval.tags = driver
jppf.discovery.enabled.doc  = Enable/disable server discovery via UDP multicast
jppf.discovery.enabled.tags = client, node, driver
jppf.discovery.exclude.ipv4.doc  = IPv4 exclusion patterns for server discovery
jppf.discovery.exclude.ipv4.tags = client, node
jppf.discovery.exclude.ipv6.doc  = IPv6 exclusion patterns for server discovery
jppf.discovery.exclude.ipv6.tags = client, node
jppf.discovery.group.doc  = Server discovery: UDP multicast group
jppf.discovery.group.tags = client, node
jppf.discovery.include.ipv4.doc  = IPv4 inclusion patterns for server discovery
jppf.discovery.include.ipv4.tags = client, node
jppf.discovery.include.ipv6.doc  = IPv6 inclusion patterns for server discovery
jppf.discovery.include.ipv6.tags = client, node
jppf.discovery.port.doc  = Server discovery: UDP multicast port
jppf.discovery.port.tags = client, node
jppf.discovery.priority.doc  = Priority assigned to discovered server connections (client/admiin console)
jppf.discovery.priority.tags = client
jppf.discovery.timeout.doc  = Server discovery timeout in milliseconds
jppf.discovery.timeout.tags = client, node
jppf.disk.overflow.threshold.doc  = Ratio of available heap over the size of an object to deserialize, below which disk overflow is triggered
jppf.disk.overflow.threshold.tags = common, memory
jppf.dotnet.bridge.initialized.doc  = Whether the node is .Net-enabled
jppf.dotnet.bridge.initialized.tags = .net 
jppf.drivers.doc  = Names of the manually configured servers in the client
jppf.drivers.tags = client
jppf.gc.on.disk.overflow.doc  = Whether to call System.gc() and recompute the avalaible heap size before triggering disk overflow
jppf.gc.on.disk.overflow.tags = common, memory
jppf.gui.publish.mode.doc  = UI refresh mode for the job data panel: 'immediate_notifications' | 'deferred_notifications' | 'polling'
jppf.gui.publish.mode.tags = admin
jppf.gui.publish.period.doc  = Interval between updates of the job data view
jppf.gui.publish.period.tags = admin
jppf.idle.interruptIfRunning.doc  = Node idle mode: whether to shutdown the node at once when user activity resumes or wait until the node is no longer executing tasks
jppf.idle.interruptIfRunning.tags = node
jppf.idle.mode.enabled.doc  = Enable/disable the idle mode
jppf.idle.mode.enabled.tags = node
jppf.idle.poll.interval.doc  = Node idle mode: how often the node will check for keyboard and mouse inactivity
jppf.idle.poll.interval.tags = node
jppf.idle.timeout.doc  = Node idle mode: the time of keyboard and mouse inactivity before considering the node idle
jppf.idle.timeout.tags = node
jppf.java.path.doc  = Full path to the Java executable
jppf.java.path.tags = driver, node
jppf.jmx.notifications.queue.size.doc = Maximum size of the pending notifications queue for a JMX connection, defaults to Integer.MAX_VALUE
jppf.jmx.notifications.queue.size.tags = driver, node, jmxremote
jppf.jmx.pool.size.doc  = JMX connection pool size when discovery is enabled
jppf.jmx.pool.size.tags = client
jppf.jmxremote.protocol.doc = The JMX remote protocol
jppf.jmxremote.protocol.tags = common
jppf.jmxremote.request.timeout.doc  = Timeout in milliseconds for JMX requests
jppf.jmxremote.request.timeout.tags = common, jmxremote
jppf.job.client.sla.default.policy.doc = A default client-side execution policy to associate with submitted jobs when they don't have one
jppf.job.client.sla.default.policy.tags = client
jppf.job.persistence.doc = Class name of the implementation of the job persistence in the driver
jppf.job.persistence.tags = driver, persistence
jppf.job.persistence.ddl.location.doc = Location of the file that contains the DDL statements to create the database table for the databse job persistence
jppf.job.persistence.ddl.location.tags = driver, persistence, internal
jppf.job.persistence.memory.threshold.doc = Percentage of used heap above which async job persistence switches to sequential mode, until the used heap decreases below the threshold
jppf.job.persistence.memory.threshold.tags = driver, persistence
jppf.job.sla.default.policy.doc = A default driver-side execution policy to associate with submitted jobs when they don't have one
jppf.job.sla.default.policy.tags = client
jppf.jvm.options.doc  = JVM options for the node or server process
jppf.jvm.options.tags = node, driver
jppf.length.buffer.pool.size.doc  = Temporary buffer pool size for reading lengths as ints (size 4)
jppf.length.buffer.pool.size.tags = common
jppf.load.balancing.algorithm.doc  = Load balancing algorithm name
jppf.load.balancing.algorithm.tags = client, driver
jppf.load.balancing.profile.doc  = Load balancing parameters profile name
jppf.load.balancing.profile.tags = client, driver
jppf.load.balancing.persistence.doc  = Class name of the implementation of a load-balancer persistence in the driver or client, with optional parameters
jppf.load.balancing.persistence.tags = client, driver
jppf.load.balancing.persistence.ddl.location.doc  = Location of the file that contains the DDL statements to create the database table for the load-balancers persistence
jppf.load.balancing.persistence.ddl.location.tags = client, driver, persistence, internal
jppf.load.balancing.persistence.hash.doc  = The hash function used to generate load-balancer state identifiers
jppf.load.balancing.persistence.hash.tags = client, driver
jppf.local.execution.enabled.doc  = Enable/disable local execution in the client
jppf.local.execution.enabled.tags = client
jppf.local.execution.priority.doc  = Priority assigned to the client local executor
jppf.local.execution.priority.tags = client
jppf.local.execution.threads.doc  = Maximum threads to use for local execution
jppf.local.execution.threads.tags = client
jppf.local.node.bias.doc  = Whether bias towards local node for scheduling is enabled in the driver
jppf.local.node.bias.tags = driver
jppf.local.node.enabled.doc  = Whether to enable one or more nodes to run in the same JVM as the driver
jppf.local.node.enabled.tags = driver
jppf.local.node.enabled.deprecated = to enabled local nodes, specify at least one node with "jppf.local.nodes" 
jppf.local.nodes.doc  = How many local nodes to start
jppf.local.nodes.tags = driver
jppf.low.memory.threshold.doc  = Minimum heap size in MB below which disk overflow is systematically triggered, to avoid heap fragmentation and ensure there's enough memory to deserialize job headers
jppf.low.memory.threshold.tags = common, memory
jppf.management.connection.timeout.doc  = JMX client connection timeout in millis. 0 or less means no timeout
jppf.management.connection.timeout.tags = jmxremote
jppf.management.enabled.doc  = Enable/disable management of the node or server
jppf.management.enabled.tags = driver, node
jppf.management.host.doc  = Management server host
jppf.management.host.tags = node
jppf.management.port.doc  = Management remote connector port
jppf.management.port.tags = node
jppf.management.server.forwarder.doc  = Fully qualifed class name of a MBeanServerForwarder implementation with optional space-separated string parameters
jppf.management.server.forwarder.tags = driver, node
jppf.management.ssl.enabled.doc  = Enable/disable JMX via secure connections
jppf.management.ssl.enabled.tags = driver
jppf.management.ssl.enabled.deprecated = management is now enabled on both plain and secure connections via "jppf.management.enabled"
jppf.management.ssl.port.doc  = Secure JMX server port
jppf.management.ssl.port.tags = driver
jppf.management.ssl.port.deprecated = the secure management port is now the same as the server port given in "jppf.ssl.server.port"
jppf.max.jobs.doc = Maximum number of jobs that can be handled concurrently by a single connection for server connections discovered via UDP multicast
jppf.max.jobs.tags = client
jppf.nio.check.connection.doc  = Enable/disable network connection checks on write operations
jppf.nio.check.connection.tags = driver, nio
jppf.nio.select.timeout.doc  = internal use
jppf.nio.select.timeout.tags = driver, internal
jppf.nio.thread.pool.size.doc  = Core number of threads performing network I/O
jppf.nio.thread.pool.size.tags = common, nio
jppf.nio.thread.pool.type.doc = Type of NIO thread pool: either dynamic or fixed
jppf.nio.thread.pool.type.tags = common, nio
jppf.nio.thread.queue.size.doc  = Queue size for the pool of threads performing network I/O
jppf.nio.thread.queue.size.tags = common, nio
jppf.nio.thread.ttl.doc  = TTL in milliseconds for threads beyond the core number performing network I/O
jppf.nio.thread.ttl.tags = common, nio
jppf.node.android.doc  = Whether the node is an Android node
jppf.node.android.tags = node
jppf.node.class.doc  = Internal use. The class of node to instantiate upon node startup. For instance Java and Android nodes use a different class
jppf.node.class.tags = node, internal
jppf.node.classloading.batch.period.doc  = How often batched class loading requests are sent to the server
jppf.node.classloading.batch.period.tags = node
jppf.node.forwarding.pool.size.doc  = Size of the pool of threads used to process node forwarding requests and notifications
jppf.node.forwarding.pool.size.tags = driver, internal
jppf.node.idle.doc  = Whether a node is idle. This property is only set within a server.
jppf.node.idle.tags = driver
jppf.node.management.port.doc  = Node management port (to distinguish from server management port when local node is on)
jppf.node.management.port.tags = driver, node
jppf.node.max.jobs.doc = Maximum number of jobs that can be handled concurrently by a node
jppf.node.max.jobs.tags = driver, node
jppf.node.offline.doc  = Whether the node runs in offline mode 
jppf.node.offline.tags = node
jppf.node.provisioning.master.doc  = Whether the node is a master node
jppf.node.provisioning.master.tags = node
jppf.node.provisioning.master.uuid.doc  = UUID of the master node for a given slave node
jppf.node.provisioning.master.uuid.tags = node
jppf.node.provisioning.slave.doc  = Whether the node is a slave node
jppf.node.provisioning.slave.tags = node
jppf.node.provisioning.slave.config.path.doc  = Directory where slave-specific configuration files are located
jppf.node.provisioning.slave.config.path.tags = node
jppf.node.provisioning.slave.id.doc  = Id of a slave node generated by/scoped by its master. Unique within a single master's scope. \
  Associate with "jppf.node.provisioning.master.uuid" to provide a globally unique id.
jppf.node.provisioning.slave.id.tags = node
jppf.node.provisioning.slave.jvm.options.doc  = JVM options always added to the slave startup command
jppf.node.provisioning.slave.jvm.options.tags = node
jppf.node.provisioning.slave.path.prefix.doc  = Path prefix for the root directory of slave nodes
jppf.node.provisioning.slave.path.prefix.tags = node
jppf.node.provisioning.startup.overrides.file.doc  = Path to an optional config overrides file for slaves launched at startup
jppf.node.provisioning.startup.overrides.file.tags = node
jppf.node.provisioning.startup.overrides.source.doc  = An optional config overrides source (name of a class implementing org.jppf.utils.JPPFConfiguration.ConfigurationSourceReader \
 or org.jppf.utils.JPPFConfiguration.ConfigurationSource) for slaves launched at startup
jppf.node.provisioning.startup.overrides.source.tags = node
jppf.node.provisioning.startup.slaves.doc  = Number of slaves to launch upon master node startup
jppf.node.provisioning.startup.slaves.tags = node
jppf.node.reserved.job.doc = UUID of the job for which a node is reserved
jppf.node.reserved.job.tags = driver, node, internal
jppf.node.reserved.uuid.doc = internal use
jppf.node.reserved.uuid.tags = driver, node, internal
jppf.node.throttling.check.period.doc = How often the node throttling mechanism will check, expressed as an interval in milliseconds
jppf.node.throttling.check.period.tags = node
jppf.notification.offload.memory.threshold.doc = Used heap in bytes above which notifications from task are offloaded to file. Defaults to 0.8 * maxHeapSize.
jppf.notification.offload.memory.threshold.tags = common, memory
jppf.object.serialization.class.doc  = Serialization scheme: name of a class implementing org.jppf.serialization.JPPFSerialization
jppf.object.serialization.class.tags = common
jppf.peer.allow.orphans.doc  = Whether to send jobs to orphan peer servers
jppf.peer.allow.orphans.tags = driver
jppf.peer.discovery.enabled.doc  = Enable/disable peer server discovery
jppf.peer.discovery.enabled.tags = driver
jppf.peer.discovery.removal.cleanup.interval.doc  = internal use
jppf.peer.discovery.removal.cleanup.interval.tags = driver, internal
jppf.peer.handler.period.doc  = internal use
jppf.peer.handler.period.tags = driver, internal
jppf.peer.pool.size.doc  = Size of discovered peer server connection pools
jppf.peer.pool.size.tags = driver
jppf.peer.processing.threads.doc  = internal use
jppf.peer.processing.threads.tags = driver, internal
jppf.peer.recovery.enabled.doc = Heartbeat enabled flag for a discovered peer driver connection.
jppf.peer.recovery.enabled.tags = driver
jppf.peer.ssl.enabled.doc  = Toggle secure connections to remote peer servers
jppf.peer.ssl.enabled.tags = driver
jppf.peers.doc  = Space-separated list of peer server names
jppf.peers.tags = driver
jppf.peers.load.balance.threshold.doc = The number of connected nodes below which this driver load-balances to other peer drivers
jppf.peers.load.balance.threshold.tags = driver
jppf.pool.size.doc  = Connection pool size for server connections discovered via UDP multicast
jppf.pool.size.tags = client
jppf.processing.threads.doc  = Number of processing threads in the node
jppf.processing.threads.tags = node
jppf.processing.threads.ttl.doc  = Tmie to live for the node processing threads, in seconds
jppf.processing.threads.tags = node
jppf.provisioning.request.check.timeout.doc  = internal use
jppf.provisioning.request.check.timeout.tags = node, internal
jppf.reconnect.initial.delay.doc  = Delay in seconds before the first (re)connection attempt
jppf.reconnect.initial.delay.tags = common
jppf.reconnect.interval.doc  = Frequency in seconds of reconnection attempts
jppf.reconnect.interval.tags = common
jppf.reconnect.max.time.doc  = Time in seconds after which reconnection attempts stop. A negative value means never stop
jppf.reconnect.max.time.tags = common
jppf.recovery.enabled.doc  = Enable/disable recovery from hardware failures through a heartbeat mechanism
jppf.recovery.enabled.tags = driver, node, client
jppf.recovery.max.retries.doc  = Maximum number of pings to the node before the connection is considered broken
jppf.recovery.max.retries.tags = driver
jppf.recovery.read.timeout.doc  = Maximum ping response time from the node
jppf.recovery.read.timeout.tags = driver
jppf.recovery.reaper.pool.size.doc  = Number of threads allocated to the node connection reaper
jppf.recovery.reaper.pool.size.tags = driver
jppf.redirect.err.doc  = File to redirect System.err to
jppf.redirect.err.tags = driver, node
jppf.redirect.err.append.doc  = Append to existing file (true) or create a new one (false)
jppf.redirect.err.append.tags = driver, node
jppf.redirect.out.doc  = File to redirect System.out to
jppf.redirect.out.tags = driver, node
jppf.redirect.out.append.doc  = Append to existing file (true) or create a new one (false)
jppf.redirect.out.append.tags = driver, node
jppf.remote.execution.enabled.doc  = Enable/disable remote execution (client only)
jppf.remote.execution.enabled.tags = client
jppf.resolve.addresses.doc  = Whether to resolve IP addresses
jppf.resolve.addresses.tags = client, driver, node
jppf.resource.cache.dir.doc  = Root location of the file-persisted caches
jppf.resource.cache.dir.tags = node, common
jppf.resource.cache.enabled.doc  = Whether the class loader resource cache is enabled
jppf.resource.cache.enabled.tags = node
jppf.resource.cache.storage.doc  = Type of cache storage: either 'file' or 'memory'
jppf.resource.cache.storage.tags = node
jppf.screensaver.centerimage.doc  = Path to the larger image at the center of the screen (built-in default screensaver)
jppf.screensaver.centerimage.tags = screensaver
jppf.screensaver.class.doc  = Class name of an implementation of org.jppf.node.screensaver.JPPFScreenSaver
jppf.screensaver.class.tags = screensaver
jppf.screensaver.enabled.doc  = Enable/disable the screen saver
jppf.screensaver.enabled.tags = screensaver
jppf.screensaver.fullscreen.doc  = Whether to display the screen saver in full screen mode
jppf.screensaver.fullscreen.tags = screensaver
jppf.screensaver.handle.collisions.doc  = Handle collisions between moving logos (built-in default screensaver)
jppf.screensaver.handle.collisions.tags = screensaver
jppf.screensaver.height.doc  = Height in pixels (windowed mode)
jppf.screensaver.height.tags = screensaver
jppf.screensaver.icon.doc  = Path to the image for the frame's icon (windowed mode)
jppf.screensaver.icon.tags = screensaver
jppf.screensaver.location.x.doc  = Screensaver's on-screen X coordinate (windowed mode)
jppf.screensaver.location.x.tags = screensaver
jppf.screensaver.location.y.doc  = Screensaver's on-screen Y coordinate (windowed mode)
jppf.screensaver.location.y.tags = screensaver
jppf.screensaver.logo.path.doc  = Path(s) to the moving logo image(s) (built-in default screensaver)
jppf.screensaver.logo.path.tags = screensaver
jppf.screensaver.logos.doc  = Number of moving moving logos (built-in default screensaver)
jppf.screensaver.logos.tags = screensaver
jppf.screensaver.mouse.motion.close.doc  = Whether to close the screensaver on mouse motion (full screen mode)
jppf.screensaver.mouse.motion.close.tags = screensaver
jppf.screensaver.mouse.motion.delay.doc  = internal use
jppf.screensaver.mouse.motion.delay.tags = screensaver
jppf.screensaver.node.listener.doc  = Class name of an implementation of  org.jppf.node.screensaver.NodeIntegration
jppf.screensaver.node.listener.tags = screensaver
jppf.screensaver.speed.doc  = Speed of moving moving logos! from 1 to 100 (built-in default screensaver)
jppf.screensaver.speed.tags = screensaver
jppf.screensaver.status.panel.alignment.doc  = Hhorizontal alignment of the status panel (built-in default screensaver)
jppf.screensaver.status.panel.alignment.tags = screensaver
jppf.screensaver.title.doc  = Title of the screensaver's JFrame in windowed mode
jppf.screensaver.title.tags = screensaver
jppf.screensaver.width.doc  = Width in pixels (windowed mode)
jppf.screensaver.width.tags = screensaver
jppf.script.default.language.doc  = Default script language for scripted property values
jppf.script.default.language.tags = common
jppf.sequential.serialization.doc = Whether object graphs should be serialized or deserialized sequentially instead of in parallel
jppf.sequential.serialization.tags = internal, common
jppf.serialization.exception.hook.doc  = internal use
jppf.serialization.exception.hook.tags = common, internal
jppf.server.connection.strategy.doc  = Fully qualified name of a class implementing org.jppf.node.connection.DriverConnectionStrategy
jppf.server.connection.strategy.tags = node
jppf.server.exitOnShutdown.doc  = Whether to exit the JVM when shutting the driver down
jppf.server.exitOnShutdown.tags = driver
jppf.server.host.doc  = Server host name or IP address
jppf.server.host.tags = client, node
jppf.server.port.doc  = Server port
jppf.server.port.tags = client, driver, node
jppf.socket.buffer.size.doc  = Receive/send buffer size for socket connections
jppf.socket.buffer.size.tags = common
jppf.socket.keepalive.doc  = Enable/disable socket keepalive
jppf.socket.keepalive.tags = common
jppf.socket.max-idle.doc  = Seconds a socket connection can remain idle before being closed (client only)
jppf.socket.max-idle.tags = common
jppf.socket.tcp_nodelay.doc  = Enable/disable Nagle's algorithm
jppf.socket.tcp_nodelay.tags = common
jppf.ssl.cipher.suites.doc  = Space-separated enabled cipher suites
jppf.ssl.cipher.suites.tags = ssl
jppf.ssl.client.auth.doc  = SSL client authentication level: 'none' | 'want' | 'need'
jppf.ssl.client.auth.tags = ssl
jppf.ssl.client.distinct.truststore.doc  = Whether to use a separate trust store for client certificates (server only)
jppf.ssl.client.distinct.truststore.tags = ssl, driver
jppf.ssl.client.truststore.file.doc  = Path to the client trust store in the file system or classpath
jppf.ssl.client.truststore.file.tags = ssl, driver
jppf.ssl.client.truststore.password.doc  = Plain text client trust store password
jppf.ssl.client.truststore.password.tags = ssl
jppf.ssl.client.truststore.password.source.doc  = Client trust store password as an arbitrary source
jppf.ssl.client.truststore.password.source.tags = ssl
jppf.ssl.client.truststore.source.doc  = Client trust store location as an arbitrary source
jppf.ssl.client.truststore.source.tags = ssl
jppf.ssl.client.truststore.type.doc  = Client trust store format, e.g. 'JKS'
jppf.ssl.client.truststore.type.tags = ssl
jppf.ssl.configuration.file.doc  = Path to the SSL configuration in the file system or classpath
jppf.ssl.configuration.file.tags = client, driver, node
jppf.ssl.configuration.source.doc  = SSL configuration as an arbitrary source
jppf.ssl.configuration.source.tags = client, driver, node
jppf.ssl.context.protocol.doc  = javax.net.ssl.SSLContext protocol
jppf.ssl.context.protocol.tags = ssl
jppf.ssl.enabled.doc  = Enabled/disable secure connections
jppf.ssl.enabled.tags = client, driver, node
jppf.ssl.keystore.file.doc  = Path to the key store in the file system or classpath
jppf.ssl.keystore.file.tags = ssl
jppf.ssl.keystore.password.doc  = Plain text key store password
jppf.ssl.keystore.password.tags = ssl
jppf.ssl.keystore.password.source.doc  = Key store password as an arbitrary source
jppf.ssl.keystore.password.source.tags = ssl
jppf.ssl.keystore.type.doc  = Key store format, e.g. 'JKS'
jppf.ssl.keystore.type.tags = ssl
jppf.ssl.keystore.source.doc  = Key store location as an arbitrary source
jppf.ssl.keystore.source.tags = ssl
jppf.ssl.protocols.doc  = A list of space-separated enabled protocols
jppf.ssl.protocols.tags = ssl
jppf.ssl.server.port.doc  = Server port number for secure connections
jppf.ssl.server.port.tags = driver
jppf.ssl.thread.pool.size.doc  = internal use
jppf.ssl.thread.pool.size.tags = driver, internal
jppf.ssl.truststore.file.doc  = Path to the trust store in the file system or classpath
jppf.ssl.truststore.file.tags = ssl
jppf.ssl.truststore.password.doc  = Plain text trust store password
jppf.ssl.truststore.password.tags = ssl
jppf.ssl.truststore.password.source.doc  = Trust store password as an arbitrary source
jppf.ssl.truststore.password.source.tags = ssl
jppf.ssl.truststore.source.doc  = Trust store location as an arbitrary source
jppf.ssl.truststore.source.tags = ssl
jppf.ssl.truststore.type.doc  = Trust store format, e.g. 'JKS'
jppf.ssl.truststore.type.tags = ssl
jppf.temp.buffer.pool.size.doc  = Maximum size of temporary buffers pool
jppf.temp.buffer.pool.size.tags = common
jppf.temp.buffer.size.doc  = Size of temporary buffers used in I/O transfers
jppf.temp.buffer.size.tags = common
jppf.thread.manager.class.doc  = Type of thread pool to use in the node: either 'default' or 'org.jppf.server.node.fj.ThreadManagerForkJoin'
jppf.thread.manager.class.tags = node
jppf.ui.default.scrollbar.thickness.doc  = The default thickness of the scrollbars in the GUI
jppf.ui.default.scrollbar.thickness.tags = console
jppf.ui.splash.doc  = Whether to display the animated splash screen at console startup, defaults to false
jppf.ui.splash.tags = console
jppf.ui.splash.message.color.doc = The color of the fixed text displayed at center of the splash screen, as an 'r, g, b' or 'r, g, b, a' value
jppf.ui.splash.message.color.tags = console
jppf.ui.splash.delay.doc  = Interval between images in milliseconds
jppf.ui.splash.delay.tags = console
jppf.ui.splash.images.doc  = One or more paths to the images displayed in a rolling sequence (like a slide show), separated by '|' (pipe) characters
jppf.ui.splash.images.tags = console
jppf.ui.splash.message.doc  = The fixed text displayed at center of the splash screen
jppf.ui.splash.message.tags = console
jppf.web.admin.refresh.interval.doc = Interval in seconds between 2 refreshes of a page in the web admin console
jppf.web.admin.refresh.interval.tags = web console


<driver_name>.jppf.server.host.doc = Manually defined driver host for a client-to-driver connection
<driver_name>.jppf.server.host.tags = client
<driver_name>.jppf.server.host.driver_name = one of the driver names defined with the 'jppf.drivers' property
<driver_name>.jppf.server.port.doc = Manually defined driver port for a client-to-driver connection
<driver_name>.jppf.server.port.tags = client
<driver_name>.jppf.server.port.driver_name = one of the driver names defined with the 'jppf.drivers' property
<driver_name>.jppf.ssl.enabled.doc = Manually defined SSL enabled flag for a client-to-driver connection
<driver_name>.jppf.ssl.enabled.tags = client
<driver_name>.jppf.ssl.enabled.driver_name = one of the driver names defined with the 'jppf.drivers' property
<driver_name>.jppf.max.jobs.doc = Manually defined maximum number of jobs that can be handled concurrently by a single connection
<driver_name>.jppf.max.jobs.tags = client
<driver_name>.jppf.max.jobs.driver_name = one of the driver names defined with the 'jppf.drivers' property 
<driver_name>.jppf.priority.doc = Manually defined priority for a client-to-driver connection
<driver_name>.jppf.priority.tags = client
<driver_name>.jppf.priority.driver_name = one of the driver names defined with the 'jppf.drivers' property
<driver_name>.jppf.pool.size.doc = Manually defined connection pool size for a client-to-driver connection
<driver_name>.jppf.pool.size.tags = client
<driver_name>.jppf.pool.size.driver_name = one of the driver names defined with the 'jppf.drivers' property
<driver_name>.jppf.jmx.pool.size.doc = Manually defined JMX connection pool size for a client-to-driver connection
<driver_name>.jppf.jmx.pool.size.tags = client
<driver_name>.jppf.jmx.pool.size.driver_name = one of the driver names defined with the 'jppf.drivers' property
<driver_name>.jppf.recovery.enabled.doc  = Heartbeat enabled flag for a manually configured peer client connection
<driver_name>.jppf.recovery.enabled.tags = client
<driver_name>.jppf.recovery.enabled.driver_name = one of the driver names defined with the 'jppf.drivers' property


jppf.peer.<peer_name>.pool.size.doc = Connection pool size for a manually configured peer driver connection
jppf.peer.<peer_name>.pool.size.tags = driver
jppf.peer.<peer_name>.pool.size.peer_name = one of the peer driver names defined with the 'jppf.peers' property
jppf.peer.<peer_name>.server.host.doc = Server host for a manually configured peer driver connection
jppf.peer.<peer_name>.server.host.tags = driver
jppf.peer.<peer_name>.server.host.peer_name = one of the peer driver names defined with the 'jppf.peers' property
jppf.peer.<peer_name>.server.port.doc = Server port for a manually configured peer driver connection
jppf.peer.<peer_name>.server.port.tags = driver
jppf.peer.<peer_name>.server.port.peer_name = one of the peer driver names defined with the 'jppf.peers' property
jppf.peer.<peer_name>.recovery.enabled.doc = Heartbeat enabled flag for a manually configured peer driver connection.
jppf.peer.<peer_name>.recovery.enabled.tags = driver
jppf.peer.<peer_name>.recovery.enabled.peer_name = one of the peer driver names defined with the 'jppf.peers' property
jppf.peer.<peer_name>.ssl.enabled.doc = SSL enabled flag for a manually configured peer driver connection
jppf.peer.<peer_name>.ssl.enabled.tags = driver
jppf.peer.<peer_name>.ssl.enabled.peer_name = one of the peer driver names defined with the 'jppf.peers' property


jppf.admin.console.view.<view_name>.enabled.doc = Enable / disable a pluggable view
jppf.admin.console.view.<view_name>.enabled.tags = console
jppf.admin.console.view.<view_name>.enabled.view_name = a user-assigned name for the view
jppf.admin.console.view.<view_name>.class.doc = Name of a pluggable view class, extending org.jppf.ui.plugin.PluggableView
jppf.admin.console.view.<view_name>.class.tags = console
jppf.admin.console.view.<view_name>.class.view_name = a user-assigned name for the view
jppf.admin.console.view.<view_name>.title.doc = The title for the view, seen as the tab label
jppf.admin.console.view.<view_name>.title.tags = console
jppf.admin.console.view.<view_name>.title.view_name = a user-assigned name for the view
jppf.admin.console.view.<view_name>.icon.doc = Path to the icon for a pluggable view, seen as the tab icon
jppf.admin.console.view.<view_name>.icon.tags = console
jppf.admin.console.view.<view_name>.icon.view_name = a user-assigned name for the view
jppf.admin.console.view.<view_name>.addto.doc = The built-in view a pluggable view is attached to. It must be one of the tabbed panes of the admin console. Possible values: Main | Topology | Charts
jppf.admin.console.view.<view_name>.addto.tags = console
jppf.admin.console.view.<view_name>.addto.view_name = a user-assigned name for the view
jppf.admin.console.view.<view_name>.position.doc = The position at which a pluggable view is inserted withing the enclosing tabbed pane. A negative value means insert at the end
jppf.admin.console.view.<view_name>.position.tags = console
jppf.admin.console.view.<view_name>.position.view_name = a user-assigned name for the view
jppf.admin.console.view.<view_name>.autoselect.doc = Whether to automatically select the pluggable view
jppf.admin.console.view.<view_name>.autoselect.tags = console
jppf.admin.console.view.<view_name>.autoselect.view_name = a user-assigned name for the view
