#------------------------------------------------------------------------------#
# JPPF                                                                         #
# Copyright (C) 2005-2019 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
# 	 http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#

#------------------------------------------------------------------------------#
# Manual configuration of the server connection                                #
#------------------------------------------------------------------------------#

# Host name, or ip address, of the host the JPPF driver is running on
# defaults to 'localhost'
#jppf.server.host = localhost

# port number the server is listening to for connections, defaults to 11111
#jppf.server.port = 11111

#------------------------------------------------------------------------------#
# Configuration of JMX management server                                       #
#------------------------------------------------------------------------------#

# enable/disable management, defaults to true
#jppf.management.enabled = true

# JMX management host IP address. If unspecified (recommended), the first
# non-local IP address (i.e. neither 127.0.0.1 nor localhost) on this machine
# will be used. If no non-local IP is found, 'localhost' will be used.
#jppf.management.host = localhost

# JMX management port, defaults to 11198 (no SSL) or 11193 with SSL. If the port
# is already bound, the node will automatically scan for the next available port.
jppf.node.management.port = 12001

#------------------------------------------------------------------------------#
#                          SSL Settings                                        #
#------------------------------------------------------------------------------#

# Enable SSL, defaults to false (disabled). If enabled, only SSL connections are established
#jppf.ssl.enabled = true

# location of the SSL configuration on the file system
jppf.ssl.configuration.file = config/ssl/ssl.properties

# SSL configuration as an arbitrary source. Value is the fully qualified name of
# an implementation of java.util.concurrent.Callable<InputStream> with optional space-separated arguments
#jppf.ssl.configuration.source = org.jppf.ssl.FileStoreSource config/ssl/ssl.properties

#------------------------------------------------------------------------------#
# Server discovery via UDP multicast.                                          #
#------------------------------------------------------------------------------#

# Enable/disable automatic discovery of JPPF drivers, defaults to true.
#jppf.discovery.enabled = true

# UDP multicast group to which drivers broadcast their connection parameters
# and to which clients and nodes listen. Default to 230.0.0.1
#jppf.discovery.group = 230.0.0.1

# UDP multicast port to which drivers broadcast their connection parameters 
# and to which clients and nodes listen. Defaults to 11111
#jppf.discovery.port = 11111

# How long the  node will attempt to automatically discover a driver before falling
# back to the parameters specified in this configuration file. Defaults to 5000 ms
#jppf.discovery.timeout = 5000

# IPv4 address patterns included in the server dscovery mechanism
# Drivers whose IPv4 address matches the pattern will be included
# in the list of discovered drivers.
#jppf.discovery.include.ipv4 = 192.168.1.; 192.168.1.0/24

# IPv4 address patterns excluded from the server dscovery mechanism
# Drivers whose IPv4 address matches the pattern will be excluded
# from the list of discovered drivers.
#jppf.discovery.exclude.ipv4 = 192.168.1.128-; 192.168.1.0/25

# IPv6 address patterns included in the server dscovery mechanism
#jppf.discovery.include.ipv6 = 1080:0:0:0:8:800:200C-20FF:-; ::1/80

# IPv6 address patterns excluded from the server dscovery mechanism
#jppf.discovery.exclude.ipv6 = 1080:0:0:0:8:800:200C-20FF:0C00-0EFF; ::1/96

#------------------------------------------------------------------------------#
# Automatic recovery from disconnection from the server                        #
#------------------------------------------------------------------------------#

# number of seconds before the first reconnection attempt. Defaults to 0
#jppf.reconnect.initial.delay = 0

# time in seconds after which the system stops trying to reconnect
# A value of zero or less means the system never stops trying. Defaults to 60
jppf.reconnect.max.time = 5

# time between two connection attempts, in seconds. Defaults to 1
#jppf.reconnect.interval = 1

#------------------------------------------------------------------------------#
# Processing Threads: number of threads running tasks in this node.            #
# default value is the number of available CPUs; uncomment to specify a        #
# different value. Blocking tasks might benefit from a number larger than CPUs #
#------------------------------------------------------------------------------#

#jppf.processing.threads = 1

#------------------------------------------------------------------------------#
# Thread Manager: manager that wraps the executor service for running tasks.   #
# default value is ThreadManagerThreadPool - that wraps ThreadPoolExecutor     #
#------------------------------------------------------------------------------#

# built-in thread manager
#jppf.thread.manager.class = default

# fork/join thread manager 
#jppf.thread.manager.class = org.jppf.server.node.fj.ThreadManagerForkJoin

#------------------------------------------------------------------------------#
# Specify alternate serialization schemes.                                     #
# Defaults to org.jppf.serialization.DefaultJavaSerialization.                 #
#------------------------------------------------------------------------------#

# default
#jppf.object.serialization.class = org.jppf.serialization.DefaultJavaSerialization

# built-in object serialization schemes
#jppf.object.serialization.class = org.jppf.serialization.DefaultJPPFSerialization
#jppf.object.serialization.class = org.jppf.serialization.XstreamSerialization

# defined in the "Kryo Serialization" sample
#jppf.object.serialization.class = org.jppf.serialization.kryo.KryoSerialization

#------------------------------------------------------------------------------#
# Other JVM options added to the java command line when the node is started as #
# a subprocess. Multiple options are separated by spaces.                      # 
#------------------------------------------------------------------------------#

jppf.jvm.options = -Xmx128m -Djava.util.logging.config.file=config/logging-node.properties

# example with remote debugging options
#jppf.jvm.options = -server -Xmx128m -Xrunjdwp:transport=dt_socket,address=localhost:8000,server=y,suspend=n

#------------------------------------------------------------------------------#
# path to the Java executable. When defined, it is used by the launch script   #
# (startNode.bat or startNode.sh) instead of the default Java path.            #
# It is undefined by default, meaning that the script will use the "java"      #
# command, relying on Java being in the system PATH.                           #
#------------------------------------------------------------------------------#

# linux/unix example
#jppf.java.path = /opt/java/jdk1.8.0_x64/bin/java
# windows example
#jppf.java.path = C:/java/jdk1.8.0_x64/bin/java.exe

#------------------------------------------------------------------------------#
# Idle mode configuration. In idle mode, the server ot node starts when no     #
# mouse or keyboard activity has occurred since the specified tiemout, and is  #
# stopped when any new activity occurs. See "jppf.idle.timeout" below.         #
#------------------------------------------------------------------------------#

# enable/disable idle mode, defaults to false (disabled)
#jppf.idle.mode.enabled = false

# Time of keyboard and mouse inactivity after which the system is considered
# idle, in ms. Defaults to 300000 (5 minutes)
#jppf.idle.timeout = 6000

# Interval between 2 successive calls to the native APIs to determine whether
# the system idle state has changed. Defaults to 1000 ms.
#jppf.idle.poll.interval = 1000

# Whether to shutdown the node immediately when a mouse/keyboard activity is detected,
# or wait until the node is no longer executing tasks. Defaults to true (immediate shutdown).
#jppf.idle.interruptIfRunning = true

#------------------------------------------------------------------------------#
# Automatic recovery from hard failure of the server connection. These         # 
# parameters configure how the node reacts to the heartbeats sent by the       #
# server, or lack thereof.                                                     #
#------------------------------------------------------------------------------#

# Enable recovery from hardware failures, defaults to false (disabled)
#jppf.recovery.enabled = true

# Dedicated port number for the detection of connection failure, must be the 
# same as the value specified in the server configuration. Defaults to 22222.
# If server discovery is enabled, this value will be overridden by the port
# number specified in the driver configuration.
#jppf.recovery.server.port = 22222

# Maximum number of attempts to get a message from the server before the
# connection is considered broken. Default value is 2
#jppf.recovery.max.retries = 2

# Maximum time in milliseconds allowed for each attempt to get a response from 
# the node. Default value is 60000 ms (1 minute).

#jppf.recovery.read.timeout = 60000

#------------------------------------------------------------------------------#
# JPPF class loader-related properties                                         #
#------------------------------------------------------------------------------#

# JPPF class loader delegation model. values: parent | url, defaults to parent
jppf.classloader.delegation = parent

# size of the class loader cache in the node, defaults to 50
jppf.classloader.cache.size = 50

# class loader resource cache enabled? defaults to true.
jppf.resource.cache.enabled = true
# resource cache's type of storage: either "file" (the default) or "memory"
jppf.resource.cache.storage = file
# root location of the file-persisted caches
#jppf.resource.cache.dir = some_directory

#------------------------------------------------------------------------------#
# Screen saver settings                                                        #
#------------------------------------------------------------------------------#

# include the settings from a separate file to avoid cluttering this config file
#!include file config/screensaver.properties

#------------------------------------------------------------------------------#
# Redirecting System.out and System.err to files.                              #
#------------------------------------------------------------------------------#

# file path on the file system where System.out is redirected.
# if unspecified or invalid, then no redirection occurs
#jppf.redirect.out = System.out.log
# whether to append to an existing file or to create a new one
jppf.redirect.out.append = false

# file path on the file system where System.err is redirected
# if unspecified or invalid, then no redirection occurs
#jppf.redirect.err = System.err.log
# whether to append to an existing file or to create a new one
jppf.redirect.err.append = false

#------------------------------------------------------------------------------#
# Node provisioning configuration                                              #
#------------------------------------------------------------------------------#

# Define a node as master. Defaults to true
jppf.node.provisioning.master = true
# Define a node as a slave. Defaults to false
jppf.node.provisioning.slave = false
# Specify the path prefix used for the root directory of each slave node
# defaults to "slave_nodes/node_", relative to the master root directory
jppf.node.provisioning.slave.path.prefix = slave_nodes/node_
# Specify the directory where slave-specific configuration files are located
# Defaults to the "config" folder, relative to the master root directory
jppf.node.provisioning.slave.config.path = config
# A set of space-separated JVM options always added to the slave startup command
jppf.node.provisioning.slave.jvm.options = -Dlog4j.configuration=config/log4j-node.properties
# Specify the number of slaves to launch upon master node startup. Defaults to 0
jppf.node.provisioning.startup.slaves = 0

#------------------------------------------------------------------------------#
# Global performance tuning parameters. These affect the performance and       #
# throughput of I/O operations in JPPF. The values provided in the vanilla     #
# JPPF distribution are known to offer a good performance in most situations   #
# and environments.                                                            #
#------------------------------------------------------------------------------#

# Size of send and receive buffer for socket connections.
# Defaults to 32768 and must be in range [1024, 1024*1024]
# 128 * 1024 = 131072
jppf.socket.buffer.size = 131072
# Size of temporary buffers (including direct buffers) used in I/O transfers.
# Defaults to 32768 and must be in range [1024, 1024*1024]
jppf.temp.buffer.size = 12288
# Maximum size of temporary buffers pool (excluding direct buffers). When this size
# is reached, new buffers are still created, but not released into the pool, so they
# can be quickly garbage-collected. The size of each buffer is defined with ${jppf.temp.buffer.size}
# Defaults to 10 and must be in range [1, 2048]
jppf.temp.buffer.pool.size = 200
# Size of temporary buffer pool for reading lengths as ints (size of each buffer is 4).
# Defaults to 100 and must be in range [1, 2048]
jppf.length.buffer.pool.size = 100

#------------------------------------------------------------------------------#
# Enabling or disabling the lookup of classpath resources in the file system   #
# Defaults to true (enabled)                                                   #
#------------------------------------------------------------------------------#

#jppf.classloader.file.lookup = true

#------------------------------------------------------------------------------#
# Timeout in millis for JMX requests. Defaults to Long.MAX_VALUE (2^63 - 1)    #
#------------------------------------------------------------------------------#

#jppf.jmx.request.timeout = $script{ java.lang.Long.MAX_VALUE }$
