#------------------------------------------------------------------------------#
# JPPF.                                                                        #
# Copyright (C) 2005-2019 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
#    http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#

jppf.async = true
jppf.jmxremote.nio.servers.pool.size = 1

#jppf.node.max.jobs = 5
#jppf.test.job.removal = true
jppf.node.max.jobs = 10

jppf.jmx.notifications.queue.size = 2000
#jppf.node.reader.max.threads = 4

#------------------------------------------------------------------------------#
# port number to which the server listens for plain connections                #
# default value is 11111; uncomment to specify a different value               #
# to disable, specify a negative port number                                   #
#------------------------------------------------------------------------------#

jppf.server.port = 11111
#jppf.server.port = -1

#jppf.ssl.server.port = 11443
jppf.ssl.server.port = -1

#------------------------------------------------------------------------------#
#                          SSL Settings                                        #
#------------------------------------------------------------------------------#

# location of the SSL configuration on the file system
jppf.ssl.configuration.file = config/ssl/ssl-server.properties

# SSL configuration as an aribtrary source. Value is the fully qualified name
# of an implementation of java.util.concurrent.Callable<InputStream> with optional space-separated arguments
#jppf.ssl.configuration.source = org.jppf.ssl.FileStoreSource config/ssl3/ssl-server.properties

# enable secure communications with other servers; defaults to false (disabled)#
#jppf.peer.ssl.enabled = true

#------------------------------------------------------------------------------#
# enabling JMX features                                                        #
#------------------------------------------------------------------------------#

# non-secure JMX connections; default is true (enabled)
#jppf.management.enabled = false

# secure JMX connections via SSL/TLS; default is false (disabled)
#jppf.management.ssl.enabled = true

#------------------------------------------------------------------------------#
# driver JVM options.                                                          #
#------------------------------------------------------------------------------#

#-XX:CompileThreshold=10000 -XX:+AggressiveOpts
node.test.mbean.cp = -cp ../x-test/classes

h2.cp -cp ../tests/lib/h2.jar
db2.cp = -cp C:/temp/jdbc/db2/*
oracle.cp = -cp C:/temp/jdbc/oracle/*
alldb.cp =  ${mysql.cp} ${oracle.cp} ${db2.cp} ${h2.cp}
lang.options = -Duser.language=en -Duser.country=US
DataDependency.cp = -cp ../samples-pack/DataDependency/target/classes -cp ../samples-pack/DataDependency/target/lib/*
WordCount.cp = -cp ../samples-pack/WordCount/target/WordCount-NodeListener.jar

# ${oshi.cp}  ${node.test.mbean.cp}
jppf.jvm.options = -Xmx4g -server -XX:+HeapDumpOnOutOfMemoryError -Djava.util.logging.config.file=config/logging-driver.properties ${sysprops}
#${node.test.mbean.cp}
#jppf.java.path = C:/java/jdk1.8.0_x64/bin/java.exe

#------------------------------------------------------------------------------#
# To disable JMX RMI connector, the 2 options below work equally well:         #
# -XX:+DisableAttachMechanism                                                  #
# -Dsun.rmi.transport.tcp.maxConnectionThreads=0                               #
#------------------------------------------------------------------------------#

# with debug options
#jppf.jvm.options = -Xmx768m -server -Djava.util.logging.config.file=config/logging-driver.properties -Xrunjdwp:transport=dt_socket,address=localhost:8000,server=y,suspend=n

#------------------------------------------------------------------------------#
# Enable/Disable automatic discovery of JPPF drivers.                          #
# default value is true; uncomment to specify a different value                #
#------------------------------------------------------------------------------#

#jppf.discovery.enabled = false
#jppf.discovery.group = 230.0.0.1
#jppf.discovery.port = 11111
jppf.discovery.broadcast.interval = 500
jppf.peer.discovery.enabled = false
jppf.peer.pool.size = 1
#jppf.discovery.broadcast.include.ipv6 = 0-FFFF
jppf.discovery.broadcast.exclude.ipv6 = -
#jppf.discovery.broadcast.include.ipv4 = 
#jppf.discovery.broadcast.exclude.ipv4 = -

jppf.peer.allow.orphans = true

#jppf.peers.load.balance.threshold = 3
#jppf.peers = driver1 driver2
#jppf.peers = driver2
jppf.peer.driver2.server.host = 192.168.1.24
jppf.peer.driver2.server.port = 11112
jppf.peer.driver2.pool.size = 1
#jppf.peer.driver2.recovery.enabled = true

#------------------------------------------------------------------------------#
# Load-balancing configuration                                                 #
#------------------------------------------------------------------------------#

lb.pkg = org.jppf.load.balancer.persistence
lb.db = ${lb.pkg}.DatabaseLoadBalancerPersistence load_balancer jobDS
lb.file = ${lb.pkg}.FileLoadBalancerPersistence lb_persistence_driver1
lb.async = ${lb.pkg}.AsynchronousLoadBalancerPersistence 16

#jppf.load.balancing.persistence = ${lb.async} ${lb.db}
#jppf.load.balancing.persistence = ${lb.db}
#jppf.load.balancing.persistence = ${lb.async} ${lb.file}
#jppf.load.balancing.persistence = ${lb.file}

jppf.load.balancing.algorithm = proportional
#jppf.load.balancing.algorithm = rl2
#jppf.load.balancing.algorithm = manual
#jppf.load.balancing.algorithm = nodethreads
#jppf.load.balancing.algorithm = autotuned
#jppf.load.balancing.algorithm = rl
#jppf.load.balancing.algorithm = customLoadBalancer

# name of the set of parameter values (aka profile) to use for the algorithm

#jppf.load.balancing.profile = manual
#jppf.load.balancing.profile = proportional
#jppf.load.balancing.profile = nodethreads
#jppf.load.balancing.profile = rl
#jppf.load.balancing.profile = autotuned
jppf.load.balancing.profile = test
#jppf.load.balancing.profile = rl2

# "manual" profile
jppf.load.balancing.profile.manual.size = 10

# "autotuned" profile
jppf.load.balancing.profile.autotuned.size = 5
jppf.load.balancing.profile.autotuned.minSamplesToAnalyse = 100
jppf.load.balancing.profile.autotuned.minSamplesToCheckConvergence = 50
jppf.load.balancing.profile.autotuned.maxDeviation = 0.2
jppf.load.balancing.profile.autotuned.maxGuessToStable = 50
jppf.load.balancing.profile.autotuned.sizeRatioDeviation = 1.5
jppf.load.balancing.profile.autotuned.decreaseRatio = 0.2

# "proportional" profile
jppf.load.balancing.profile.proportional.performanceCacheSize = 500
jppf.load.balancing.profile.proportional.proportionalityFactor = 1
jppf.load.balancing.profile.proportional.initialSize = 5
jppf.load.balancing.profile.proportional.initialMeanTime = 3e9

# "rl" profile
jppf.load.balancing.profile.rl.performanceCacheSize = 1000
jppf.load.balancing.profile.rl.performanceVariationThreshold = 0.001
jppf.load.balancing.profile.rl.maxActionRange = 20

# "nodethreads" profile
jppf.load.balancing.profile.nodethreads.multiplicator = 2

# "rl2" profile
jppf.load.balancing.profile.rl2.performanceCacheSize = 1000
jppf.load.balancing.profile.rl2.performanceVariationThreshold = 0.75
jppf.load.balancing.profile.rl2.minSamples = 20
jppf.load.balancing.profile.rl2.maxSamples = 100
jppf.load.balancing.profile.rl2.maxRelativeSize = 0.5

# "test" profile
# manual params
jppf.load.balancing.profile.test.size = 10
# autotuned params
jppf.load.balancing.profile.test.minSamplesToAnalyse = 100
jppf.load.balancing.profile.test.minSamplesToCheckConvergence = 50
jppf.load.balancing.profile.test.maxDeviation = 0.2
jppf.load.balancing.profile.test.maxGuessToStable = 50
jppf.load.balancing.profile.test.sizeRatioDeviation = 1.5
jppf.load.balancing.profile.test.decreaseRatio = 0.2
# proportional params
jppf.load.balancing.profile.test.proportionalityFactor = 1
jppf.load.balancing.profile.test.initialSize = 10
jppf.load.balancing.profile.test.initialMeanTime = 3e10
# rl params
#jppf.load.balancing.profile.test.maxActionRange = 20
#jppf.load.balancing.profile.test.maxTimesAtMinimum = 5
# nodethreads params
jppf.load.balancing.profile.test.multiplicator = 1
# rl2 params
jppf.load.balancing.profile.test.performanceCacheSize = 5000
jppf.load.balancing.profile.test.performanceVariationThreshold = 0.92
jppf.load.balancing.profile.test.minSamples = 1500
jppf.load.balancing.profile.test.maxSamples = 5000
jppf.load.balancing.profile.test.maxRelativeSize = 0.9

#------------------------------------------------------------------------------#
# heartbeat-based recovery configuration                                       #
#------------------------------------------------------------------------------#

#jppf.recovery.enabled = true
jppf.recovery.max.retries = 4
jppf.recovery.read.timeout = 10000
#jppf.recovery.server.port = 22222
jppf.recovery.reaper.pool.size = 8
jppf.recovery.reaper.run.interval = ${jppf.recovery.read.timeout}

#------------------------------------------------------------------------------#

# number of seconds before the first reconnection attempt
jppf.reconnect.initial.delay = 1
# time after which the system stops trying to reconnect, in seconds
# a value of zero or less means it never stops
jppf.reconnect.max.time = 300
# time between two connection attempts, in seconds
jppf.reconnect.interval = 1

#------------------------------------------------------------------------------#
# behavioral options                                                           #
#------------------------------------------------------------------------------#

#!include file jppf-common.properties

#jppf.io.buffer.size = 128

jppf.debug.enabled = true

# readable driver uuid
#jppf.driver.uuid = d1

#jppf.discovery.broadcast.exclude.ipv6 = 0-FFFF
#jppf.discovery.broadcast.exclude.ipv6 = -
#jppf.discovery.broadcast.exclude.ipv4 = -

#------------------------------------------------------------------------------#
# Default database jobs persistence configuration                              #
#------------------------------------------------------------------------------#

pkg = org.jppf.job.persistence.impl
async = ${pkg}.AsynchronousPersistence 24
cacheable = ${pkg}.CacheablePersistence 10000
file = ${pkg}.DefaultFilePersistence persistence
db = ${pkg}.DefaultDatabasePersistence TEST1 h2DS

#jppf.job.persistence = ${file}
#jppf.job.persistence = ${async} ${file}
#jppf.job.persistence = ${cacheable} ${file}
#jppf.job.persistence = ${cacheable} ${async} ${file}
#jppf.job.persistence = ${db}
#jppf.job.persistence = ${async} ${db}
#jppf.job.persistence = ${cacheable} ${db}
#jppf.job.persistence = ${cacheable} ${async} ${db}

#------------------------------------------------------------------------------#
# Datasource definitions                                                       #
#------------------------------------------------------------------------------#

#jppf.datasource.jobs.name = mysqlDS
jppf.datasource.jobs.driverClassName = com.mysql.jdbc.Driver
jppf.datasource.jobs.jdbcUrl = jdbc:mysql://localhost:3306/testjppf
jppf.datasource.jobs.username = testjppf
jppf.datasource.jobs.password = testjppf
jppf.datasource.jobs.minimumIdle = 5
jppf.datasource.jobs.maximumPoolSize = 10
jppf.datasource.jobs.connectionTimeout = 30000
jppf.datasource.jobs.idleTimeout = 600000

#jppf.datasource.jobsDB2.name = db2DS
jppf.datasource.jobsDB2.driverClassName = com.ibm.db2.jcc.DB2Driver
jppf.datasource.jobsDB2.jdbcUrl = jdbc:db2://192.168.1.10:50000/DSI
jppf.datasource.jobsDB2.username = db2admin
jppf.datasource.jobsDB2.password = I6harmen
jppf.datasource.jobsDB2.minimumIdle = 5
jppf.datasource.jobsDB2.maximumPoolSize = 10
jppf.datasource.jobsDB2.connectionTimeout = 10000
jppf.datasource.jobsDB2.idleTimeout = 600000

#jppf.datasource.jobsOracle.name = oracleDS
jppf.datasource.jobsOracle.dataSourceClassName = oracle.jdbc.pool.OracleDataSource
jppf.datasource.jobsOracle.dataSource.url = jdbc:oracle:thin:@192.168.1.10:1521/orclpdb.home
jppf.datasource.jobsOracle.dataSource.user = dsi
jppf.datasource.jobsOracle.dataSource.password = dsi
jppf.datasource.jobsOracle.minimumIdle = 1
jppf.datasource.jobsOracle.maximumPoolSize = 10
jppf.datasource.jobsOracle.connectionTimeout = 30000
jppf.datasource.jobsOracle.idleTimeout = 600000

#jppf.datasource.jobsH2.name = h2DS
jppf.datasource.jobsH2.driverClassName = org.h2.Driver
jppf.datasource.jobsH2.jdbcUrl = jdbc:h2:tcp://localhost:9092/./root/tests_jppf
jppf.datasource.jobsH2.username = sa
jppf.datasource.jobsH2.password =
jppf.datasource.jobsH2.minimumIdle = 5
jppf.datasource.jobsH2.maximumPoolSize = 10
jppf.datasource.jobsH2.connectionTimeout = 30000
jppf.datasource.jobsH2.idleTimeout = 600000


#jppf.datasource.driver.name = mysqlDS
#jppf.datasource.driver.scope = local
jppf.datasource.driver.driverClassName = com.mysql.jdbc.Driver
jppf.datasource.driver.jdbcUrl = jdbc:mysql://localhost:3306/testjppf
jppf.datasource.driver.username = testjppf
jppf.datasource.driver.password = testjppf
jppf.datasource.driver.minimumIdle = 5
jppf.datasource.driver.maximumPoolSize = 10
jppf.datasource.driver.connectionTimeout = 30000
jppf.datasource.driver.idleTimeout = 600000

#jppf.datasource.common.name = commonDS
#jppf.datasource.common.scope = any
jppf.datasource.common.driverClassName = com.mysql.jdbc.Driver
jppf.datasource.common.jdbcUrl = jdbc:mysql://localhost:3306/testjppf
jppf.datasource.common.username = testjppf
jppf.datasource.common.password = testjppf
jppf.datasource.common.minimumIdle = 5
jppf.datasource.common.maximumPoolSize = 10
jppf.datasource.common.connectionTimeout = 30000
jppf.datasource.common.idleTimeout = 600000

policy1 = $script{ \
  importPackage(Packages.org.jppf.node.policy); \
  new Equal("custom.prop", false, "node1").or(new IsInIPv4Subnet("192.168.1.10-50")).toXML(); \
}$

jppf.deadlock.detector.enabled = true

#------------------------------------------------------------------------------#
# local node configuration                                                     #
#------------------------------------------------------------------------------#

# readable local node uuid
#jppf.node.uuid = ln1

#jppf.local.node.enabled = true
jppf.local.nodes = 0

jppf.processing.threads = 8
jppf.node.processing.threads = 8
jppf.processing.threads.ttl = 10
jppf.classloader.cache.size = 1

#jppf.classloader.delegation = url
#jppf.thread.manager.class = org.jppf.server.node.fj.ThreadManagerForkJoin

#jppf.redirect.out = driver1_out.log
#jppf.redirect.err = driver1_err.log

#------------------------------------------------------------------------------#

z.generic.cmd = $script{ \
  var pid = org.jppf.utils.SystemUtils.getPID(); \
  var osName = java.lang.System.getProperty("os.name").toLowerCase(); \ 
  (osName.contains("windows") ? "taskkill /F /PID " : "kill -9 ") + pid; \
}$

z.1 = $script{ 1 + 2 }$
z.2 = $s{ 1 + 2 }$
z.3 = $S{ 1 + 2 }$
z.4 = $S::f{ ../x-test/temp.js }$
