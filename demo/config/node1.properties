#------------------------------------------------------------------------------#
# JPPF.                                                                        #
#  Copyright (C) 2005-2019 JPPF Team.                                          #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
# 	 http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#

#------------------------------------------------------------------------------#
# Host name, or ip address, of the host the JPPF driver is running on          #
# Defaults to localhost; not used if discovery is enabled.                     #
#------------------------------------------------------------------------------#

jppf.server.host = 192.168.1.24
jppf.server.port = 11111
#jppf.server.port = 11443

#------------------------------------------------------------------------------#
# Enabling JMX features                                                        #
# default value is true; uncomment to specify a different value                #
#------------------------------------------------------------------------------#

#jppf.management.enabled = false
jppf.management.port = 12001

#------------------------------------------------------------------------------#
# Enable/Disable automatic discovery of JPPF drivers.                          #
# default value is true; uncomment to specify a different value                #
#------------------------------------------------------------------------------#

jppf.discovery.enabled = false
#jppf.discovery.group = 230.0.0.1
#jppf.discovery.port = 11111
#jppf.discovery.timeout = 5000
jppf.discovery.exclude.ipv6 = -

#------------------------------------------------------------------------------#
#                          SSL Settings                                        #
#------------------------------------------------------------------------------#

# enable SSL. Default is false (disabled).
# if enabled, only SSL connections are established
#jppf.ssl.enabled = true

# location of the SSL configuration on the file system
jppf.ssl.configuration.file = config/ssl/ssl-node.properties

# SSL configuration as an arbitrary source. Value is the fully qualified name
# of an implementation of java.util.concurrent.Callable<InputStream> with optional space-separated arguments
#jppf.ssl.configuration.source = org.jppf.ssl.FileStoreSource config/ssl2/ssl-node.properties

#------------------------------------------------------------------------------#
# Automatic recovery: number of seconds before the first reconnection attempt. #
# default value is 1; uncomment to specify a different value                   #
#------------------------------------------------------------------------------#

#jppf.reconnect.initial.delay = 1
jppf.reconnect.max.time = 5
#jppf.reconnect.interval = 1

#------------------------------------------------------------------------------#
# Processing Threads: number of threads running tasks in this node.            #
# default value is 1; uncomment to specify a different value                   #
# blocking tasks might benefit from a number larger then CPUs                  #
#------------------------------------------------------------------------------#

jppf.processing.threads = 8
#jppf.processing.threads = $script{ java.lang.Runtime.getRuntime().availableProcessors() / 2 }$
# thread TTL in seconds
jppf.processing.threads.ttl = 10

#!include file jppf-common.properties

#jppf.server.connection.strategy = org.jppf.example.gridfailover.NodeSideDiscovery
#jppf.server.connection.strategy = org.jppf.node.connection.JPPFCsvFileConnectionStrategy
#jppf.server.connection.strategy.file = drivers.csv
#jppf.server.connection.strategy = org.jppf.node.connection.JPPFCsvPropertyConnectionStrategy
#jppf.server.connection.strategy.definitions = \
#  # definition for server 1 |\
#  false, localhost, 11111, -1 |\
#  # definition for server 2 |\
#  false, localhost, 11112, -1

#------------------------------------------------------------------------------#
# Other JVM options added to the java command line when the node is started as #
# a subprocess. Multiple options are separated by spaces.                      # 
#------------------------------------------------------------------------------#

#BridgeTo.NET.dir = ../samples-pack/BridgeTo.NET
samples.lib.dir = ../samples-pack/shared/lib
gridfailover.cp = -cp ../samples-pack/GridFailover/classes \
 -cp ${samples.lib.dir}/jackson-annotations-2.10.2.jar \
 -cp ${samples.lib.dir}/jackson-core-2.10.2.jar \
 -cp ${samples.lib.dir}/jackson-databind-2.10.2.jar \
 -cp ${samples.lib.dir}/jackson-dataformat-yaml-2.10.2.jar \
 -cp ${samples.lib.dir}/snakeyaml-1.24.jar
drivers.definition.file = ../samples-pack/GridFailover/drivers.yaml

NodeTray.cp = -cp ../samples-pack/NodeTray/target/NodeTray.jar

# to use with offline = true
jppf.jvm.options = -server -Xmx128m -XX:+HeapDumpOnOutOfMemoryError -Djava.util.logging.config.file=config/logging-node1.properties -Duser.language=en 
#jppf.jvm.options = -server -Xmx128m -Djava.util.logging.config.file=config/logging-node1.properties ${kryo.cp} \
#  "-Djava.library.path=${bin.dir};${env.PATH}" \
#  -cp ${jar.dir}/jni4net.j-0.8.8.0.jar;${BridgeTo.NET.dir}/classes;${jar.dir}/jppf.api.jar;${jar.dir}/jppf.example.tasks.jar;${jar.dir}/jppf.dotnet.api.generated.jar \
#  -cp ../server/classes;../client/classes

#  -cp ${jar.dir}/jni4net.j-0.8.8.0.jar;${BridgeTo.NET.dir}/classes;${jar.dir}/jppf.api.jar;${jar.dir}/jppf.example.tasks.generated.jar;../server/classes

#jppf.jvm.options = -server -Xmx512m -Djava.library.path=../x-aparapi/lib -Djava.util.logging.config.file=config/logging-node1.properties \
# -Dcom.amd.aparapi.executionMode=GPU \
# -Dcom.amd.aparapi.logLevel=WARNING \
# -Dcom.amd.aparapi.enableVerboseJNI=false \
# -Dcom.amd.aparapi.enableProfiling=false \
# -Dcom.amd.aparapi.enableShowGeneratedOpenCL=false \
# -Dcom.amd.aparapi.enableVerboseJNIOpenCLResourceTracking=false \
# -Dcom.amd.aparapi.dumpFlags=false \
# -Dcom.amd.aparapi.enableInstructionDecodeViewer=false \
# -Dcom.amd.aparapi.enableExecutionModeReporting=false
#jppf.jvm.options = -server -Xmx1024m -Djava.util.logging.config.file=config/logging-node1.properties -Djava.library.path=C:/ftp/dev/TanukiSoftware/wrapper-windows-x86-32-3.5.15\\lib
#jppf.jvm.options = -server -Xmx1024m -Djava.util.logging.config.file=config/logging-node1.properties -Dhazelcast.jmx=true -Dcom.sun.management.jmxremote

# example with remote debugging options
#jppf.jvm.options = -server -Xmx512m -Djava.util.logging.config.file=config/logging-node1.properties -Xrunjdwp:transport=dt_socket,address=localhost:8000,server=y,suspend=n

#jppf.node.offline = true

id = 1

#------------------------------------------------------------------------------#
# Idle mode enabled/disabled. In idle mode, the server or node starts when no  #
# mouse or keyboard activity has occurred since the specified tiemout, and is  #
# stopped when any new activity occurs. See "jppf.idle.timeout" below.         #
# Default is false (i.e. disabled).                                            #
#------------------------------------------------------------------------------#

#jppf.idle.mode.enabled = true
jppf.idle.timeout = 6000
jppf.idle.poll.interval = 1000
jppf.idle.interruptIfRunning = false

#------------------------------------------------------------------------------#
# Screen saver settings                                                        #
#------------------------------------------------------------------------------#

#!include file config/screensaver.properties

#------------------------------------------------------------------------------#

#jppf.recovery.enabled = true

jppf.classloader.cache.size = 5
#jppf.classloader.delegation = url

jppf.resource.cache.enabled = true

#jppf.low.memory.threshold = 16
jppf.gc.on.disk.overflow = true

#jppf.node.uuid = n1

#jppf.classloader.delegation = url
#jppf.thread.manager.class = org.jppf.server.node.fj.ThreadManagerForkJoin

#jppf.leaks.prevention.enabled = false
#jppf.classloader.clear.thread = true

#jppf.serialization.exception.hook = test.MyHook

#jppf.redirect.out = node1_out.log
#jppf.redirect.err = node1_err.log
jppf.debug.enabled = true

jppf.node.provisioning.master = true
jppf.node.provisioning.slave.path.prefix = slave_nodes/node_1_
#jppf.node.provisioning.slave.config.dir
jppf.node.provisioning.slave.config.path = config/slave
jppf.node.provisioning.slave.jvm.options = -Dlog4j.configuration=config/log4j-slave.properties
jppf.node.provisioning.startup.slaves = 0
jppf.node.provisioning.startup.overrides.file = ${jppf.node.provisioning.slave.config.path}/node-config-overrides.properties
jppf.node.provisioning.slave.start.delay.increment = 250

jppf.node.throttling.memory.threshold.active = true
jppf.node.throttling.memory.threshold = 90
jppf.node.throttling.memory.threshold.maxNbTimesFalse = 3

#a.homepath = ${env.HOMEPATH}
#a.path = ${env.PATH}
#a.log4j = ${sys.log4j.configuration}

reservation.prop.1 = 1
reservation.prop.2 = a
